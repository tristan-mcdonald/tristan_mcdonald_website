{"version":3,"sources":["../../../../../../../../../Downloads/node_modules_for__tristan_mcdonald_website__tenet/node_modules/browser-pack/_prelude.js","../build_assets/js/app.js","../build_assets/js/modules/classlist_polyfill.js","../build_assets/js/modules/focus_accessibility.js","../build_assets/js/modules/foreach_polyfill.js","../build_assets/js/modules/type_ratio_interpolation.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_classlist_polyfill","_interopRequireDefault","_foreach_polyfill","_focus_accessibility","_type_ratio_interpolation","document","createElement","classList","DOMTokenList","prototype","replace","token","replacementToken","tokens","this","toString","split","index","indexOf","slice","remove","apply","add","console","info","ally","version","style","focusSource","window","NodeList","forEach","callback","thisArg","scaleRatio","currentViewportWidth","minimumValue","maximumValue","rateOfChange","boundedRatio","Math","max","min","documentElement","setProperty","innerWidth","addEventListener"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,MAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,MAAAO,KAAA,mBAAAF,EAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBCEA,IAAAK,EAAAC,EAAAZ,EAAA,iCACAa,EAAAD,EAAAZ,EAAA,+BACAc,EAAAF,EAAAZ,EAAA,kCACAe,EAAAH,EAAAZ,EAAA,uC,oDAIA,EAAAa,EAAA,YAKA,EAAAF,EAAA,YAKA,EAAAI,EAAA,YAIA,EAAAD,EAAA,Y,uOCpBe,WACL,YAAaE,SAASC,cAAc,KAAKC,YAC3CC,aAAaC,UAAUC,QAAU,SAAUC,EAAOC,GAC9C,IAAIC,EAASC,KAAKC,WAAWC,MAAM,KAC7BC,EAASJ,EAAOK,QAAQP,EAAQ,KACjCM,IACDJ,EAASA,EAAOM,MAAMF,GACtBH,KAAKM,OAAOC,MAAMP,KAAMD,GACxBC,KAAKQ,IAAIV,GACTE,KAAKQ,IAAID,MAAMP,KAAMD,EAAOM,MAAM,S,+FCTnC,WAGXI,QAAQC,KAAK,iBAAkBC,KAAKC,QAAS,cAGzBD,KAAKE,MAAMC,gB,+FCNpB,WACP,aAAcC,SAAWC,SAASrB,UAAUsB,UAC5CD,SAASrB,UAAUsB,QAAU,SAAUC,EAAUC,GAC7CA,EAAUA,GAAWJ,OACrB,IAAK,IAAI3C,EAAI,EAAGA,EAAI4B,KAAKjB,OAAQX,IAC7B8C,EAASpC,KAAKqC,EAASnB,KAAK5B,GAAIA,EAAG4B,U,oCCRnD,SAASoB,EAAYC,EAAsBC,EAAcC,GAIrD,IAOMC,GAAgBD,EAAeD,GAAhB,KASfG,EAAeC,KAAKC,IAAIL,EAAcI,KAAKE,IAJvBP,EAAuBG,GAHrBF,EATX,IAS0BE,GAO6BD,IAExEhC,SAASsC,gBAAgBhB,MAAMiB,YAAY,UAAWL,G,2DAM3C,WAWXL,EAHoBL,OAAOgB,WALN,KAGC,MAOtBhB,OAAOiB,iBAAiB,SAAU,WAI9BZ,EAFoBL,OAAOgB,WAZV,KAGC","file":"app.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n// import functions\nimport ClassListPolyfill from \"./modules/classlist_polyfill\";\nimport ForEachPolyfill from \"./modules/foreach_polyfill\";\nimport FocusAccessibility from \"./modules/focus_accessibility\";\nimport TypeRatioInterpolation from \"./modules/type_ratio_interpolation\";\n/*\n    polyfill to enable use of forEach on node lists in IE11\n*/\nForEachPolyfill();\n/*\n    polyfill to allow use of replace method\n    on a classList in internet explorer\n*/\nClassListPolyfill();\n/*\n    interpolate between type ratio minimum and maximum values,\n    and store the result in a CSS custom property\n*/\nTypeRatioInterpolation();\n/*\n    allow enchanced focus detection (depends on a11y.js)\n*/\nFocusAccessibility();\n","/*\n    polyfill to allow use of replace method on a classList in internet explorer\n*/\nexport default function () {\n    if (!(\"replace\" in document.createElement(\"_\").classList)) {\n        DOMTokenList.prototype.replace = function (token, replacementToken) {\n            let tokens = this.toString().split(\" \");\n            const index  = tokens.indexOf(token + \"\");\n            if (~index) {\n                tokens = tokens.slice(index);\n                this.remove.apply(this, tokens);\n                this.add(replacementToken);\n                this.add.apply(this, tokens.slice(1));\n            }\n        };\n    }\n}\n","/*\n    allow enchanced focus detection (depends on a11y.js)\n*/\nexport default function () {\n    /* global ally */\n    // inform the developer that a11y.js has loaded\n    console.info(\"loaded version\", ally.version, \"of a11y.js\");\n    // detect focus source using a11y.js, which will be stored\n    // as CSS classes on the `html` element\n    const focusSource = ally.style.focusSource(); // eslint-disable-line no-unused-vars\n}\n","/*\n    polyfill to enable use of forEach on node lists in IE11\n*/\nexport default function () {\n    if (\"NodeList\" in window && !NodeList.prototype.forEach) {\n        NodeList.prototype.forEach = function (callback, thisArg) {\n            thisArg = thisArg || window;\n            for (var i = 0; i < this.length; i++) {\n                callback.call(thisArg, this[i], i, this);\n            }\n        };\n    }\n}\n","function scaleRatio (currentViewportWidth, minimumValue, maximumValue) {\n    // store the minimum viewport width at which `--ratio`\n    // custom property will be set. this must match values\n    // set in `breakpoints.styl` & `typography.styl`.\n    const minRange = 480;\n    // store the maximum viewport width at which `--ratio`\n    // custom property will be set. this must match values\n    // set in `breakpoints.styl` & `typography.styl`.\n    const maxRange = 1680;\n    // calculate and store the rate at wich our ratio changes\n    // when the viewport width changes by 1px\n    const rateOfChange = (maximumValue - minimumValue) / (maxRange - minRange);\n    // store the intercept (the value of Y when all X=0)\n    const valueAtViewportZero = minimumValue - rateOfChange * minRange;\n    // if we follow a linear progression from ratio m at viewport M,\n    // to ratio n at viewport N, calculate and store the ratio at viewport X\n    const interpolatedRatio = currentViewportWidth * rateOfChange + valueAtViewportZero;\n    // use `interpolatedRatio` value if it's within range.\n    // if it would be smaller than the smallest acceptable ratio, use the smallest.\n    // if it would be larger than the largest acceptable ratio, use the largest.\n    const boundedRatio = Math.max(minimumValue, Math.min(interpolatedRatio, maximumValue));\n    // store final ratio in CSS custom property `--ratio`\n    document.documentElement.style.setProperty(\"--ratio\", boundedRatio);\n}\n/*\n    interpolate between type ratio minimum and maximum values,\n    and store the result in a CSS custom property\n*/\nexport default function () {\n    // store the lowest ratio to use for our typographic scale.\n    // This must match the value set in `typographic-variables.styl`.\n    const typeRatioLow = 1.16;\n    // store the highest ratio to use for our typographic scale.\n    // This must match the value set in `typographic-variables.styl`.\n    const typeRatioHigh = 1.28;\n    // store the current viewport width\n    const screenWidth = window.innerWidth;\n    // apply the ratio scaling function, to apply\n    // the ratio for the current viewport width\n    scaleRatio(screenWidth, typeRatioLow, typeRatioHigh);\n    // watch for change in the viewport width\n    window.addEventListener(\"resize\", () => {\n        // store the current viewport width\n        const screenWidth = window.innerWidth;\n        // recalculate ratio when change is detected\n        scaleRatio(screenWidth, typeRatioLow, typeRatioHigh);\n    });\n}\n"]}